# Задание 1
# К уже реализованному классу «Дробь» добавьте статический 
# метод, который при вызове возвращает количество созданных объектов класса «Дробь».



# from __future__ import annotations


# class Fraction:
# 	def __init__(self, numerator: int, denominator: int, int_part: int = 0):
# 		self.__num: int = numerator + int_part * denominator
# 		self.__den: int = denominator



# 	def add(self, fraction: Fraction) -> Fraction:
# 		num = self.__num * fraction.__den + fraction.__num * self.__den
# 		den = self.__den * fraction.__den
# 		return Fraction(num, den)

# 	def multiply(self, fraction: Fraction) -> Fraction:
# 		num = self.__num * fraction.__num
# 		den = self.__den * fraction.__den
# 		return Fraction(num, den)

# 	def __str__(self) -> str:
# 		num = self.__num

# 		if self.__num > self.__den:
# 			int_part = int(self.__num / self.__den)
# 			num -= int_part * self.__den
# 			return f'{int_part} ({num}/{self.__den})'
# 		elif self.__num == self.__den:
# 			return str(int(self.__num / self.__den))

# 		return f'{self.__num}/{self.__den}'

# def __float__(self):
# 		return self.__num / self.__den


# @staticmethod
# def fff() -> int:
#  return Fraction.__counter


# f1: Fraction = Fraction(5, 7)
# f2: Fraction = Fraction(1, 7)

# f3: Fraction = f1.add(f2)
# print(f3)
# print(float(f3))




# Задание 2
# Создайте класс для конвертирования температуры из 
# Цельсия в Фаренгейт и наоборот. У класса должно быть 
# два статических метода: для перевода из Цельсия в Фаренгейт и для перевода из Фаренгейта в Цельсий. Также 
# класс должен считать количество подсчетов температурыи 
# возвращать это значение с помощью статического метода.

# class TemperatureConverter:
  
# @staticmethod
# def celsius_to_fahrenheit(celsius):
#   return celsius * 9/5 + 32

# @staticmethod
# def celsius_to_kelvin(celsius):
#  return celsius + 273.15

# @staticmethod
# def fahrenheit_to_celsius(fahrenheit):
#  return (fahrenheit - 32) * 5/9

# @staticmethod
# def fahrenheit_to_kelvin(fahrenheit):
#  return (fahrenheit - 32) * 5/9 + 273.15

# @staticmethod
# def kelvin_to_celsius(kelvin):
#  return kelvin - 273.15

# @staticmethod
# def kelvin_to_fahrenheit(kelvin):
#  return (kelvin - 273.15) * 9/5 + 32




# Задание 3
# Создайте класс для перевода из метрической системы 
# в английскую и наоборот. Функциональность необходимо 
# реализовать в виде статических методов. Обязательно 
# реализуйте перевод мер длины


# lass LengthConverter:
#  KOEF = 3.28084
    
# @staticmethod
# def meters_to_feet(meters):
#  return meters * LengthConverter.KOEF
 
# @staticmethod
# def feet_to_meters(feet):
#  return feet / LengthConverter.KOEF
        

